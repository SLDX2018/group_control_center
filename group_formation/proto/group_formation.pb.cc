// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group_formation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "group_formation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace group_formation {

namespace {

const ::google::protobuf::Descriptor* Pose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Pose_reflection_ = NULL;
const ::google::protobuf::Descriptor* Robot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Robot_reflection_ = NULL;
const ::google::protobuf::Descriptor* Formation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Formation_reflection_ = NULL;
const ::google::protobuf::Descriptor* GroupConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GroupConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_group_5fformation_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_group_5fformation_2eproto() {
  protobuf_AddDesc_group_5fformation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "group_formation.proto");
  GOOGLE_CHECK(file != NULL);
  Pose_descriptor_ = file->message_type(0);
  static const int Pose_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, roll_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, pitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, yaw_),
  };
  Pose_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Pose_descriptor_,
      Pose::default_instance_,
      Pose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, _has_bits_[0]),
      -1,
      -1,
      sizeof(Pose),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, _internal_metadata_),
      -1);
  Robot_descriptor_ = file->message_type(1);
  static const int Robot_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, robot_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, goal_pose_topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, goal_frame_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, initial_pose_topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, initial_pose_),
  };
  Robot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Robot_descriptor_,
      Robot::default_instance_,
      Robot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, _has_bits_[0]),
      -1,
      -1,
      sizeof(Robot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, _internal_metadata_),
      -1);
  Formation_descriptor_ = file->message_type(2);
  static const int Formation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Formation, pose_),
  };
  Formation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Formation_descriptor_,
      Formation::default_instance_,
      Formation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Formation, _has_bits_[0]),
      -1,
      -1,
      sizeof(Formation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Formation, _internal_metadata_),
      -1);
  GroupConfig_descriptor_ = file->message_type(3);
  static const int GroupConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupConfig, robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupConfig, formation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupConfig, goal_),
  };
  GroupConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GroupConfig_descriptor_,
      GroupConfig::default_instance_,
      GroupConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(GroupConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupConfig, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_group_5fformation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Pose_descriptor_, &Pose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Robot_descriptor_, &Robot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Formation_descriptor_, &Formation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GroupConfig_descriptor_, &GroupConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_group_5fformation_2eproto() {
  delete Pose::default_instance_;
  delete Pose_reflection_;
  delete Robot::default_instance_;
  delete Robot_reflection_;
  delete Formation::default_instance_;
  delete Formation_reflection_;
  delete GroupConfig::default_instance_;
  delete GroupConfig_reflection_;
}

void protobuf_AddDesc_group_5fformation_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_group_5fformation_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025group_formation.proto\022\017group_formation"
    "\"Q\n\004Pose\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001("
    "\002\022\014\n\004roll\030\004 \001(\002\022\r\n\005pitch\030\005 \001(\002\022\013\n\003yaw\030\006 "
    "\001(\002\"\224\001\n\005Robot\022\022\n\nrobot_name\030\001 \001(\t\022\027\n\017goa"
    "l_pose_topic\030\002 \001(\t\022\025\n\rgoal_frame_id\030\003 \001("
    "\t\022\032\n\022initial_pose_topic\030\004 \001(\t\022+\n\014initial"
    "_pose\030\005 \001(\0132\025.group_formation.Pose\"0\n\tFo"
    "rmation\022#\n\004pose\030\001 \003(\0132\025.group_formation."
    "Pose\"\210\001\n\013GroupConfig\022%\n\005robot\030\001 \003(\0132\026.gr"
    "oup_formation.Robot\022-\n\tformation\030\002 \003(\0132\032"
    ".group_formation.Formation\022#\n\004goal\030\003 \003(\013"
    "2\025.group_formation.Pose", 463);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "group_formation.proto", &protobuf_RegisterTypes);
  Pose::default_instance_ = new Pose();
  Robot::default_instance_ = new Robot();
  Formation::default_instance_ = new Formation();
  GroupConfig::default_instance_ = new GroupConfig();
  Pose::default_instance_->InitAsDefaultInstance();
  Robot::default_instance_->InitAsDefaultInstance();
  Formation::default_instance_->InitAsDefaultInstance();
  GroupConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_group_5fformation_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_group_5fformation_2eproto {
  StaticDescriptorInitializer_group_5fformation_2eproto() {
    protobuf_AddDesc_group_5fformation_2eproto();
  }
} static_descriptor_initializer_group_5fformation_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kXFieldNumber;
const int Pose::kYFieldNumber;
const int Pose::kZFieldNumber;
const int Pose::kRollFieldNumber;
const int Pose::kPitchFieldNumber;
const int Pose::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group_formation.Pose)
}

void Pose::InitAsDefaultInstance() {
}

Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group_formation.Pose)
}

void Pose::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  roll_ = 0;
  pitch_ = 0;
  yaw_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:group_formation.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Pose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Pose_descriptor_;
}

const Pose& Pose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fformation_2eproto();
  return *default_instance_;
}

Pose* Pose::default_instance_ = NULL;

Pose* Pose::New(::google::protobuf::Arena* arena) const {
  Pose* n = new Pose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:group_formation.Pose)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Pose, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Pose*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(x_, yaw_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group_formation.Pose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_roll;
        break;
      }

      // optional float roll = 4;
      case 4: {
        if (tag == 37) {
         parse_roll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
          set_has_roll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_pitch;
        break;
      }

      // optional float pitch = 5;
      case 5: {
        if (tag == 45) {
         parse_pitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
          set_has_pitch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_yaw;
        break;
      }

      // optional float yaw = 6;
      case 6: {
        if (tag == 53) {
         parse_yaw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
          set_has_yaw();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group_formation.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group_formation.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group_formation.Pose)
  // optional float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional float roll = 4;
  if (has_roll()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->roll(), output);
  }

  // optional float pitch = 5;
  if (has_pitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pitch(), output);
  }

  // optional float yaw = 6;
  if (has_yaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->yaw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group_formation.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group_formation.Pose)
  // optional float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional float roll = 4;
  if (has_roll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->roll(), target);
  }

  // optional float pitch = 5;
  if (has_pitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pitch(), target);
  }

  // optional float yaw = 6;
  if (has_yaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->yaw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group_formation.Pose)
  return target;
}

int Pose::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:group_formation.Pose)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }

    // optional float roll = 4;
    if (has_roll()) {
      total_size += 1 + 4;
    }

    // optional float pitch = 5;
    if (has_pitch()) {
      total_size += 1 + 4;
    }

    // optional float yaw = 6;
    if (has_yaw()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:group_formation.Pose)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Pose* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:group_formation.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:group_formation.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:group_formation.Pose)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_roll()) {
      set_roll(from.roll());
    }
    if (from.has_pitch()) {
      set_pitch(from.pitch());
    }
    if (from.has_yaw()) {
      set_yaw(from.yaw());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:group_formation.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:group_formation.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {

  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(roll_, other->roll_);
  std::swap(pitch_, other->pitch_);
  std::swap(yaw_, other->yaw_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Pose_descriptor_;
  metadata.reflection = Pose_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pose

// optional float x = 1;
bool Pose::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pose::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Pose::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pose::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float Pose::x() const {
  // @@protoc_insertion_point(field_get:group_formation.Pose.x)
  return x_;
}
 void Pose::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:group_formation.Pose.x)
}

// optional float y = 2;
bool Pose::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pose::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Pose::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pose::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float Pose::y() const {
  // @@protoc_insertion_point(field_get:group_formation.Pose.y)
  return y_;
}
 void Pose::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:group_formation.Pose.y)
}

// optional float z = 3;
bool Pose::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Pose::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Pose::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Pose::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float Pose::z() const {
  // @@protoc_insertion_point(field_get:group_formation.Pose.z)
  return z_;
}
 void Pose::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:group_formation.Pose.z)
}

// optional float roll = 4;
bool Pose::has_roll() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Pose::set_has_roll() {
  _has_bits_[0] |= 0x00000008u;
}
void Pose::clear_has_roll() {
  _has_bits_[0] &= ~0x00000008u;
}
void Pose::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
 float Pose::roll() const {
  // @@protoc_insertion_point(field_get:group_formation.Pose.roll)
  return roll_;
}
 void Pose::set_roll(float value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:group_formation.Pose.roll)
}

// optional float pitch = 5;
bool Pose::has_pitch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Pose::set_has_pitch() {
  _has_bits_[0] |= 0x00000010u;
}
void Pose::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000010u;
}
void Pose::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
 float Pose::pitch() const {
  // @@protoc_insertion_point(field_get:group_formation.Pose.pitch)
  return pitch_;
}
 void Pose::set_pitch(float value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:group_formation.Pose.pitch)
}

// optional float yaw = 6;
bool Pose::has_yaw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Pose::set_has_yaw() {
  _has_bits_[0] |= 0x00000020u;
}
void Pose::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000020u;
}
void Pose::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
 float Pose::yaw() const {
  // @@protoc_insertion_point(field_get:group_formation.Pose.yaw)
  return yaw_;
}
 void Pose::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:group_formation.Pose.yaw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Robot::kRobotNameFieldNumber;
const int Robot::kGoalPoseTopicFieldNumber;
const int Robot::kGoalFrameIdFieldNumber;
const int Robot::kInitialPoseTopicFieldNumber;
const int Robot::kInitialPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Robot::Robot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group_formation.Robot)
}

void Robot::InitAsDefaultInstance() {
  initial_pose_ = const_cast< ::group_formation::Pose*>(&::group_formation::Pose::default_instance());
}

Robot::Robot(const Robot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group_formation.Robot)
}

void Robot::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  robot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goal_pose_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goal_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_pose_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_pose_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Robot::~Robot() {
  // @@protoc_insertion_point(destructor:group_formation.Robot)
  SharedDtor();
}

void Robot::SharedDtor() {
  robot_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goal_pose_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goal_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initial_pose_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete initial_pose_;
  }
}

void Robot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Robot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Robot_descriptor_;
}

const Robot& Robot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fformation_2eproto();
  return *default_instance_;
}

Robot* Robot::default_instance_ = NULL;

Robot* Robot::New(::google::protobuf::Arena* arena) const {
  Robot* n = new Robot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Robot::Clear() {
// @@protoc_insertion_point(message_clear_start:group_formation.Robot)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_robot_name()) {
      robot_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_goal_pose_topic()) {
      goal_pose_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_goal_frame_id()) {
      goal_frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_initial_pose_topic()) {
      initial_pose_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_initial_pose()) {
      if (initial_pose_ != NULL) initial_pose_->::group_formation::Pose::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Robot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group_formation.Robot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string robot_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robot_name().data(), this->robot_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_formation.Robot.robot_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_goal_pose_topic;
        break;
      }

      // optional string goal_pose_topic = 2;
      case 2: {
        if (tag == 18) {
         parse_goal_pose_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goal_pose_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->goal_pose_topic().data(), this->goal_pose_topic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_formation.Robot.goal_pose_topic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_goal_frame_id;
        break;
      }

      // optional string goal_frame_id = 3;
      case 3: {
        if (tag == 26) {
         parse_goal_frame_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goal_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->goal_frame_id().data(), this->goal_frame_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_formation.Robot.goal_frame_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_initial_pose_topic;
        break;
      }

      // optional string initial_pose_topic = 4;
      case 4: {
        if (tag == 34) {
         parse_initial_pose_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initial_pose_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initial_pose_topic().data(), this->initial_pose_topic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_formation.Robot.initial_pose_topic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_initial_pose;
        break;
      }

      // optional .group_formation.Pose initial_pose = 5;
      case 5: {
        if (tag == 42) {
         parse_initial_pose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initial_pose()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group_formation.Robot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group_formation.Robot)
  return false;
#undef DO_
}

void Robot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group_formation.Robot)
  // optional string robot_name = 1;
  if (has_robot_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_name().data(), this->robot_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.robot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robot_name(), output);
  }

  // optional string goal_pose_topic = 2;
  if (has_goal_pose_topic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goal_pose_topic().data(), this->goal_pose_topic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.goal_pose_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->goal_pose_topic(), output);
  }

  // optional string goal_frame_id = 3;
  if (has_goal_frame_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goal_frame_id().data(), this->goal_frame_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.goal_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->goal_frame_id(), output);
  }

  // optional string initial_pose_topic = 4;
  if (has_initial_pose_topic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initial_pose_topic().data(), this->initial_pose_topic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.initial_pose_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->initial_pose_topic(), output);
  }

  // optional .group_formation.Pose initial_pose = 5;
  if (has_initial_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->initial_pose_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group_formation.Robot)
}

::google::protobuf::uint8* Robot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group_formation.Robot)
  // optional string robot_name = 1;
  if (has_robot_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_name().data(), this->robot_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.robot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robot_name(), target);
  }

  // optional string goal_pose_topic = 2;
  if (has_goal_pose_topic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goal_pose_topic().data(), this->goal_pose_topic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.goal_pose_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->goal_pose_topic(), target);
  }

  // optional string goal_frame_id = 3;
  if (has_goal_frame_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goal_frame_id().data(), this->goal_frame_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.goal_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->goal_frame_id(), target);
  }

  // optional string initial_pose_topic = 4;
  if (has_initial_pose_topic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initial_pose_topic().data(), this->initial_pose_topic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_formation.Robot.initial_pose_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->initial_pose_topic(), target);
  }

  // optional .group_formation.Pose initial_pose = 5;
  if (has_initial_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->initial_pose_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group_formation.Robot)
  return target;
}

int Robot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:group_formation.Robot)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional string robot_name = 1;
    if (has_robot_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->robot_name());
    }

    // optional string goal_pose_topic = 2;
    if (has_goal_pose_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goal_pose_topic());
    }

    // optional string goal_frame_id = 3;
    if (has_goal_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goal_frame_id());
    }

    // optional string initial_pose_topic = 4;
    if (has_initial_pose_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initial_pose_topic());
    }

    // optional .group_formation.Pose initial_pose = 5;
    if (has_initial_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->initial_pose_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Robot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:group_formation.Robot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Robot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Robot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:group_formation.Robot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:group_formation.Robot)
    MergeFrom(*source);
  }
}

void Robot::MergeFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:group_formation.Robot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_robot_name()) {
      set_has_robot_name();
      robot_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_name_);
    }
    if (from.has_goal_pose_topic()) {
      set_has_goal_pose_topic();
      goal_pose_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goal_pose_topic_);
    }
    if (from.has_goal_frame_id()) {
      set_has_goal_frame_id();
      goal_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goal_frame_id_);
    }
    if (from.has_initial_pose_topic()) {
      set_has_initial_pose_topic();
      initial_pose_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initial_pose_topic_);
    }
    if (from.has_initial_pose()) {
      mutable_initial_pose()->::group_formation::Pose::MergeFrom(from.initial_pose());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Robot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:group_formation.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Robot::CopyFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:group_formation.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot::IsInitialized() const {

  return true;
}

void Robot::Swap(Robot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Robot::InternalSwap(Robot* other) {
  robot_name_.Swap(&other->robot_name_);
  goal_pose_topic_.Swap(&other->goal_pose_topic_);
  goal_frame_id_.Swap(&other->goal_frame_id_);
  initial_pose_topic_.Swap(&other->initial_pose_topic_);
  std::swap(initial_pose_, other->initial_pose_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Robot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Robot_descriptor_;
  metadata.reflection = Robot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Robot

// optional string robot_name = 1;
bool Robot::has_robot_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Robot::set_has_robot_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Robot::clear_has_robot_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Robot::clear_robot_name() {
  robot_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robot_name();
}
 const ::std::string& Robot::robot_name() const {
  // @@protoc_insertion_point(field_get:group_formation.Robot.robot_name)
  return robot_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_robot_name(const ::std::string& value) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:group_formation.Robot.robot_name)
}
 void Robot::set_robot_name(const char* value) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:group_formation.Robot.robot_name)
}
 void Robot::set_robot_name(const char* value, size_t size) {
  set_has_robot_name();
  robot_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:group_formation.Robot.robot_name)
}
 ::std::string* Robot::mutable_robot_name() {
  set_has_robot_name();
  // @@protoc_insertion_point(field_mutable:group_formation.Robot.robot_name)
  return robot_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Robot::release_robot_name() {
  // @@protoc_insertion_point(field_release:group_formation.Robot.robot_name)
  clear_has_robot_name();
  return robot_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_allocated_robot_name(::std::string* robot_name) {
  if (robot_name != NULL) {
    set_has_robot_name();
  } else {
    clear_has_robot_name();
  }
  robot_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_name);
  // @@protoc_insertion_point(field_set_allocated:group_formation.Robot.robot_name)
}

// optional string goal_pose_topic = 2;
bool Robot::has_goal_pose_topic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Robot::set_has_goal_pose_topic() {
  _has_bits_[0] |= 0x00000002u;
}
void Robot::clear_has_goal_pose_topic() {
  _has_bits_[0] &= ~0x00000002u;
}
void Robot::clear_goal_pose_topic() {
  goal_pose_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_goal_pose_topic();
}
 const ::std::string& Robot::goal_pose_topic() const {
  // @@protoc_insertion_point(field_get:group_formation.Robot.goal_pose_topic)
  return goal_pose_topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_goal_pose_topic(const ::std::string& value) {
  set_has_goal_pose_topic();
  goal_pose_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:group_formation.Robot.goal_pose_topic)
}
 void Robot::set_goal_pose_topic(const char* value) {
  set_has_goal_pose_topic();
  goal_pose_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:group_formation.Robot.goal_pose_topic)
}
 void Robot::set_goal_pose_topic(const char* value, size_t size) {
  set_has_goal_pose_topic();
  goal_pose_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:group_formation.Robot.goal_pose_topic)
}
 ::std::string* Robot::mutable_goal_pose_topic() {
  set_has_goal_pose_topic();
  // @@protoc_insertion_point(field_mutable:group_formation.Robot.goal_pose_topic)
  return goal_pose_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Robot::release_goal_pose_topic() {
  // @@protoc_insertion_point(field_release:group_formation.Robot.goal_pose_topic)
  clear_has_goal_pose_topic();
  return goal_pose_topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_allocated_goal_pose_topic(::std::string* goal_pose_topic) {
  if (goal_pose_topic != NULL) {
    set_has_goal_pose_topic();
  } else {
    clear_has_goal_pose_topic();
  }
  goal_pose_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goal_pose_topic);
  // @@protoc_insertion_point(field_set_allocated:group_formation.Robot.goal_pose_topic)
}

// optional string goal_frame_id = 3;
bool Robot::has_goal_frame_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Robot::set_has_goal_frame_id() {
  _has_bits_[0] |= 0x00000004u;
}
void Robot::clear_has_goal_frame_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void Robot::clear_goal_frame_id() {
  goal_frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_goal_frame_id();
}
 const ::std::string& Robot::goal_frame_id() const {
  // @@protoc_insertion_point(field_get:group_formation.Robot.goal_frame_id)
  return goal_frame_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_goal_frame_id(const ::std::string& value) {
  set_has_goal_frame_id();
  goal_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:group_formation.Robot.goal_frame_id)
}
 void Robot::set_goal_frame_id(const char* value) {
  set_has_goal_frame_id();
  goal_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:group_formation.Robot.goal_frame_id)
}
 void Robot::set_goal_frame_id(const char* value, size_t size) {
  set_has_goal_frame_id();
  goal_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:group_formation.Robot.goal_frame_id)
}
 ::std::string* Robot::mutable_goal_frame_id() {
  set_has_goal_frame_id();
  // @@protoc_insertion_point(field_mutable:group_formation.Robot.goal_frame_id)
  return goal_frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Robot::release_goal_frame_id() {
  // @@protoc_insertion_point(field_release:group_formation.Robot.goal_frame_id)
  clear_has_goal_frame_id();
  return goal_frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_allocated_goal_frame_id(::std::string* goal_frame_id) {
  if (goal_frame_id != NULL) {
    set_has_goal_frame_id();
  } else {
    clear_has_goal_frame_id();
  }
  goal_frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goal_frame_id);
  // @@protoc_insertion_point(field_set_allocated:group_formation.Robot.goal_frame_id)
}

// optional string initial_pose_topic = 4;
bool Robot::has_initial_pose_topic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Robot::set_has_initial_pose_topic() {
  _has_bits_[0] |= 0x00000008u;
}
void Robot::clear_has_initial_pose_topic() {
  _has_bits_[0] &= ~0x00000008u;
}
void Robot::clear_initial_pose_topic() {
  initial_pose_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_initial_pose_topic();
}
 const ::std::string& Robot::initial_pose_topic() const {
  // @@protoc_insertion_point(field_get:group_formation.Robot.initial_pose_topic)
  return initial_pose_topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_initial_pose_topic(const ::std::string& value) {
  set_has_initial_pose_topic();
  initial_pose_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:group_formation.Robot.initial_pose_topic)
}
 void Robot::set_initial_pose_topic(const char* value) {
  set_has_initial_pose_topic();
  initial_pose_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:group_formation.Robot.initial_pose_topic)
}
 void Robot::set_initial_pose_topic(const char* value, size_t size) {
  set_has_initial_pose_topic();
  initial_pose_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:group_formation.Robot.initial_pose_topic)
}
 ::std::string* Robot::mutable_initial_pose_topic() {
  set_has_initial_pose_topic();
  // @@protoc_insertion_point(field_mutable:group_formation.Robot.initial_pose_topic)
  return initial_pose_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Robot::release_initial_pose_topic() {
  // @@protoc_insertion_point(field_release:group_formation.Robot.initial_pose_topic)
  clear_has_initial_pose_topic();
  return initial_pose_topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Robot::set_allocated_initial_pose_topic(::std::string* initial_pose_topic) {
  if (initial_pose_topic != NULL) {
    set_has_initial_pose_topic();
  } else {
    clear_has_initial_pose_topic();
  }
  initial_pose_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), initial_pose_topic);
  // @@protoc_insertion_point(field_set_allocated:group_formation.Robot.initial_pose_topic)
}

// optional .group_formation.Pose initial_pose = 5;
bool Robot::has_initial_pose() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Robot::set_has_initial_pose() {
  _has_bits_[0] |= 0x00000010u;
}
void Robot::clear_has_initial_pose() {
  _has_bits_[0] &= ~0x00000010u;
}
void Robot::clear_initial_pose() {
  if (initial_pose_ != NULL) initial_pose_->::group_formation::Pose::Clear();
  clear_has_initial_pose();
}
const ::group_formation::Pose& Robot::initial_pose() const {
  // @@protoc_insertion_point(field_get:group_formation.Robot.initial_pose)
  return initial_pose_ != NULL ? *initial_pose_ : *default_instance_->initial_pose_;
}
::group_formation::Pose* Robot::mutable_initial_pose() {
  set_has_initial_pose();
  if (initial_pose_ == NULL) {
    initial_pose_ = new ::group_formation::Pose;
  }
  // @@protoc_insertion_point(field_mutable:group_formation.Robot.initial_pose)
  return initial_pose_;
}
::group_formation::Pose* Robot::release_initial_pose() {
  // @@protoc_insertion_point(field_release:group_formation.Robot.initial_pose)
  clear_has_initial_pose();
  ::group_formation::Pose* temp = initial_pose_;
  initial_pose_ = NULL;
  return temp;
}
void Robot::set_allocated_initial_pose(::group_formation::Pose* initial_pose) {
  delete initial_pose_;
  initial_pose_ = initial_pose;
  if (initial_pose) {
    set_has_initial_pose();
  } else {
    clear_has_initial_pose();
  }
  // @@protoc_insertion_point(field_set_allocated:group_formation.Robot.initial_pose)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Formation::kPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Formation::Formation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group_formation.Formation)
}

void Formation::InitAsDefaultInstance() {
}

Formation::Formation(const Formation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group_formation.Formation)
}

void Formation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Formation::~Formation() {
  // @@protoc_insertion_point(destructor:group_formation.Formation)
  SharedDtor();
}

void Formation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Formation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Formation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Formation_descriptor_;
}

const Formation& Formation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fformation_2eproto();
  return *default_instance_;
}

Formation* Formation::default_instance_ = NULL;

Formation* Formation::New(::google::protobuf::Arena* arena) const {
  Formation* n = new Formation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Formation::Clear() {
// @@protoc_insertion_point(message_clear_start:group_formation.Formation)
  pose_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Formation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group_formation.Formation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .group_formation.Pose pose = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pose()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pose;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group_formation.Formation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group_formation.Formation)
  return false;
#undef DO_
}

void Formation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group_formation.Formation)
  // repeated .group_formation.Pose pose = 1;
  for (unsigned int i = 0, n = this->pose_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pose(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group_formation.Formation)
}

::google::protobuf::uint8* Formation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group_formation.Formation)
  // repeated .group_formation.Pose pose = 1;
  for (unsigned int i = 0, n = this->pose_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pose(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group_formation.Formation)
  return target;
}

int Formation::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:group_formation.Formation)
  int total_size = 0;

  // repeated .group_formation.Pose pose = 1;
  total_size += 1 * this->pose_size();
  for (int i = 0; i < this->pose_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pose(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Formation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:group_formation.Formation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Formation* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Formation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:group_formation.Formation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:group_formation.Formation)
    MergeFrom(*source);
  }
}

void Formation::MergeFrom(const Formation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:group_formation.Formation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pose_.MergeFrom(from.pose_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Formation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:group_formation.Formation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Formation::CopyFrom(const Formation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:group_formation.Formation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Formation::IsInitialized() const {

  return true;
}

void Formation::Swap(Formation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Formation::InternalSwap(Formation* other) {
  pose_.UnsafeArenaSwap(&other->pose_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Formation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Formation_descriptor_;
  metadata.reflection = Formation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Formation

// repeated .group_formation.Pose pose = 1;
int Formation::pose_size() const {
  return pose_.size();
}
void Formation::clear_pose() {
  pose_.Clear();
}
const ::group_formation::Pose& Formation::pose(int index) const {
  // @@protoc_insertion_point(field_get:group_formation.Formation.pose)
  return pose_.Get(index);
}
::group_formation::Pose* Formation::mutable_pose(int index) {
  // @@protoc_insertion_point(field_mutable:group_formation.Formation.pose)
  return pose_.Mutable(index);
}
::group_formation::Pose* Formation::add_pose() {
  // @@protoc_insertion_point(field_add:group_formation.Formation.pose)
  return pose_.Add();
}
::google::protobuf::RepeatedPtrField< ::group_formation::Pose >*
Formation::mutable_pose() {
  // @@protoc_insertion_point(field_mutable_list:group_formation.Formation.pose)
  return &pose_;
}
const ::google::protobuf::RepeatedPtrField< ::group_formation::Pose >&
Formation::pose() const {
  // @@protoc_insertion_point(field_list:group_formation.Formation.pose)
  return pose_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupConfig::kRobotFieldNumber;
const int GroupConfig::kFormationFieldNumber;
const int GroupConfig::kGoalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupConfig::GroupConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group_formation.GroupConfig)
}

void GroupConfig::InitAsDefaultInstance() {
}

GroupConfig::GroupConfig(const GroupConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group_formation.GroupConfig)
}

void GroupConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GroupConfig::~GroupConfig() {
  // @@protoc_insertion_point(destructor:group_formation.GroupConfig)
  SharedDtor();
}

void GroupConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GroupConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GroupConfig_descriptor_;
}

const GroupConfig& GroupConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fformation_2eproto();
  return *default_instance_;
}

GroupConfig* GroupConfig::default_instance_ = NULL;

GroupConfig* GroupConfig::New(::google::protobuf::Arena* arena) const {
  GroupConfig* n = new GroupConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:group_formation.GroupConfig)
  robot_.Clear();
  formation_.Clear();
  goal_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GroupConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group_formation.GroupConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .group_formation.Robot robot = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_robot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_robot()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_robot;
        if (input->ExpectTag(18)) goto parse_loop_formation;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .group_formation.Formation formation = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_formation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_formation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_formation;
        if (input->ExpectTag(26)) goto parse_loop_goal;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .group_formation.Pose goal = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_goal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_goal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_goal;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group_formation.GroupConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group_formation.GroupConfig)
  return false;
#undef DO_
}

void GroupConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group_formation.GroupConfig)
  // repeated .group_formation.Robot robot = 1;
  for (unsigned int i = 0, n = this->robot_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->robot(i), output);
  }

  // repeated .group_formation.Formation formation = 2;
  for (unsigned int i = 0, n = this->formation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->formation(i), output);
  }

  // repeated .group_formation.Pose goal = 3;
  for (unsigned int i = 0, n = this->goal_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goal(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group_formation.GroupConfig)
}

::google::protobuf::uint8* GroupConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group_formation.GroupConfig)
  // repeated .group_formation.Robot robot = 1;
  for (unsigned int i = 0, n = this->robot_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->robot(i), false, target);
  }

  // repeated .group_formation.Formation formation = 2;
  for (unsigned int i = 0, n = this->formation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->formation(i), false, target);
  }

  // repeated .group_formation.Pose goal = 3;
  for (unsigned int i = 0, n = this->goal_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->goal(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group_formation.GroupConfig)
  return target;
}

int GroupConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:group_formation.GroupConfig)
  int total_size = 0;

  // repeated .group_formation.Robot robot = 1;
  total_size += 1 * this->robot_size();
  for (int i = 0; i < this->robot_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robot(i));
  }

  // repeated .group_formation.Formation formation = 2;
  total_size += 1 * this->formation_size();
  for (int i = 0; i < this->formation_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->formation(i));
  }

  // repeated .group_formation.Pose goal = 3;
  total_size += 1 * this->goal_size();
  for (int i = 0; i < this->goal_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goal(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:group_formation.GroupConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GroupConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:group_formation.GroupConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:group_formation.GroupConfig)
    MergeFrom(*source);
  }
}

void GroupConfig::MergeFrom(const GroupConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:group_formation.GroupConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  robot_.MergeFrom(from.robot_);
  formation_.MergeFrom(from.formation_);
  goal_.MergeFrom(from.goal_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GroupConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:group_formation.GroupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupConfig::CopyFrom(const GroupConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:group_formation.GroupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupConfig::IsInitialized() const {

  return true;
}

void GroupConfig::Swap(GroupConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupConfig::InternalSwap(GroupConfig* other) {
  robot_.UnsafeArenaSwap(&other->robot_);
  formation_.UnsafeArenaSwap(&other->formation_);
  goal_.UnsafeArenaSwap(&other->goal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GroupConfig_descriptor_;
  metadata.reflection = GroupConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupConfig

// repeated .group_formation.Robot robot = 1;
int GroupConfig::robot_size() const {
  return robot_.size();
}
void GroupConfig::clear_robot() {
  robot_.Clear();
}
const ::group_formation::Robot& GroupConfig::robot(int index) const {
  // @@protoc_insertion_point(field_get:group_formation.GroupConfig.robot)
  return robot_.Get(index);
}
::group_formation::Robot* GroupConfig::mutable_robot(int index) {
  // @@protoc_insertion_point(field_mutable:group_formation.GroupConfig.robot)
  return robot_.Mutable(index);
}
::group_formation::Robot* GroupConfig::add_robot() {
  // @@protoc_insertion_point(field_add:group_formation.GroupConfig.robot)
  return robot_.Add();
}
::google::protobuf::RepeatedPtrField< ::group_formation::Robot >*
GroupConfig::mutable_robot() {
  // @@protoc_insertion_point(field_mutable_list:group_formation.GroupConfig.robot)
  return &robot_;
}
const ::google::protobuf::RepeatedPtrField< ::group_formation::Robot >&
GroupConfig::robot() const {
  // @@protoc_insertion_point(field_list:group_formation.GroupConfig.robot)
  return robot_;
}

// repeated .group_formation.Formation formation = 2;
int GroupConfig::formation_size() const {
  return formation_.size();
}
void GroupConfig::clear_formation() {
  formation_.Clear();
}
const ::group_formation::Formation& GroupConfig::formation(int index) const {
  // @@protoc_insertion_point(field_get:group_formation.GroupConfig.formation)
  return formation_.Get(index);
}
::group_formation::Formation* GroupConfig::mutable_formation(int index) {
  // @@protoc_insertion_point(field_mutable:group_formation.GroupConfig.formation)
  return formation_.Mutable(index);
}
::group_formation::Formation* GroupConfig::add_formation() {
  // @@protoc_insertion_point(field_add:group_formation.GroupConfig.formation)
  return formation_.Add();
}
::google::protobuf::RepeatedPtrField< ::group_formation::Formation >*
GroupConfig::mutable_formation() {
  // @@protoc_insertion_point(field_mutable_list:group_formation.GroupConfig.formation)
  return &formation_;
}
const ::google::protobuf::RepeatedPtrField< ::group_formation::Formation >&
GroupConfig::formation() const {
  // @@protoc_insertion_point(field_list:group_formation.GroupConfig.formation)
  return formation_;
}

// repeated .group_formation.Pose goal = 3;
int GroupConfig::goal_size() const {
  return goal_.size();
}
void GroupConfig::clear_goal() {
  goal_.Clear();
}
const ::group_formation::Pose& GroupConfig::goal(int index) const {
  // @@protoc_insertion_point(field_get:group_formation.GroupConfig.goal)
  return goal_.Get(index);
}
::group_formation::Pose* GroupConfig::mutable_goal(int index) {
  // @@protoc_insertion_point(field_mutable:group_formation.GroupConfig.goal)
  return goal_.Mutable(index);
}
::group_formation::Pose* GroupConfig::add_goal() {
  // @@protoc_insertion_point(field_add:group_formation.GroupConfig.goal)
  return goal_.Add();
}
::google::protobuf::RepeatedPtrField< ::group_formation::Pose >*
GroupConfig::mutable_goal() {
  // @@protoc_insertion_point(field_mutable_list:group_formation.GroupConfig.goal)
  return &goal_;
}
const ::google::protobuf::RepeatedPtrField< ::group_formation::Pose >&
GroupConfig::goal() const {
  // @@protoc_insertion_point(field_list:group_formation.GroupConfig.goal)
  return goal_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace group_formation

// @@protoc_insertion_point(global_scope)
